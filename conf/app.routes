->          /                                                                                 manageDetails.Routes

#Start
GET         /                                                                                 @controllers.Application.start()

GET         /start                                                                            @controllers.Application.start()

GET         /contact-us                                                                       @controllers.Application.contactUs()

#Registration
GET         /login                                                                            @controllers.Login.show
GET         /register                                                                         @controllers.Register.show
POST        /regiser-user                                                                     @controllers.Register.choice
GET         /logout                                                                           @controllers.Application.logOut
GET         /invalid-account                                                                  @controllers.Application.invalidAccountType

#Identity verification
GET         /identity-verification/start                                                      @controllers.IdentityVerification.startIv
GET         /identity-verification/failed                                                     @controllers.IdentityVerification.fail
GET         /identity-verification/restore-session                                            @controllers.IdentityVerification.restoreSession
GET         /identity-verification/success                                                    @controllers.IdentityVerification.success

#Dashboard
GET         /home                                                                             @controllers.Dashboard.home()
GET         /your-details                                                                     @controllers.Dashboard.yourDetails()
GET         /properties                                                                       @controllers.Dashboard.manageProperties()
GET         /managed-properties/:agentCode                                                    @controllers.Dashboard.viewManagedProperties(agentCode: Long, owner: Boolean ?= true)

GET         /manage-agents                                                                    @controllers.Dashboard.manageAgents()

GET         /client-properties/:clientOrganisationId/revoke/:authorisationId                  @controllers.agent.RepresentationController.revokeClient(authorisationId: Long, clientOrganisationId: Long)
GET         /client-properties/:clientOrganisationId/revoke/:authorisationId/confirmed        @controllers.agent.RepresentationController.revokeClientConfirmed(authorisationId: Long, clientOrganisationId: Long)

GET         /property-link/:submissionId/assessments                                          @controllers.Assessments.assessments(submissionId: String, owner: Boolean ?= true)
GET         /property-link/clients/all/:submissionId/assessments                              @controllers.Assessments.assessments(submissionId: String, owner: Boolean ?= false)

GET         /summary/:uarn                                                                    @controllers.Assessments.viewSummary(uarn: Long, isPending: Boolean ?= false)
GET         /detailed/:authorisationId/:assessmentRef                                         @controllers.Assessments.viewDetailedAssessment(submissionId: String, authorisationId: Long, assessmentRef: Long, baRef, owner: Boolean ?= true)
GET         /property-link/:submissionId/valuations/:valuationId/start-challenge              @controllers.Assessments.startChallengeFromDVR(submissionId: String, valuationId: Long, owner: Boolean ?= true)
POST        /view-assessment-from-list                                                        @controllers.Assessments.submitViewAssessment(authorisationId: Long, submissionId: String, owner: Boolean ?= true)


#Search and Link
GET         /property-search                                                                  @controllers.propertyLinking.ClaimProperty.show()
GET         /link-to-property/before-you-start                                                @controllers.propertyLinking.ClaimProperty.checkPropertyLinks()
GET         /link-to-property/:uarn                                                           @controllers.propertyLinking.ClaimProperty.declareCapacity(uarn: Long, address)
GET         /link-to-property                                                                 @controllers.propertyLinking.ClaimProperty.back()
POST        /link-to-property/:uarn                                                           @controllers.propertyLinking.ClaimProperty.attemptLink(uarn: Long, address)

#Link scenarios
GET         /choose-evidence                                                                  @controllers.propertyLinking.ChooseEvidence.show()
POST        /choose-evidence                                                                  @controllers.propertyLinking.ChooseEvidence.submit()
GET         /upload-rates-bill                                                                @controllers.propertyLinking.UploadRatesBill.show(errorCode: Option[Int] ?= None, errorMessage: Option[String] ?= None)
GET         /upload-evidence                                                                  @controllers.propertyLinking.UploadEvidence.show(errorCode: Option[Int] ?= None, errorMessage: Option[String] ?= None)

GET         /summary                                                                          @controllers.propertyLinking.Declaration.show(noEvidenceFlag: Option[Boolean] ?= None)
POST        /summary                                                                          @controllers.propertyLinking.Declaration.submit(noEvidenceFlag: Option[Boolean] ?= None)

GET         /confirmation                                                                     @controllers.propertyLinking.Declaration.confirmation
GET         /confirmation/no-evidence                                                         @controllers.propertyLinking.Declaration.noEvidence

#Linking outcomes
GET         /rates-bill-submitted                                                             @controllers.propertyLinking.UploadRatesBill.fileUploaded()
GET         /evidence-uploaded                                                                @controllers.propertyLinking.UploadEvidence.fileUploaded()
GET         /no-evidence-uploaded                                                             @controllers.propertyLinking.UploadEvidence.noEvidenceUploaded()
GET         /manual-verification-required                                                     @controllers.LinkErrors.manualVerificationRequired()
GET         /linking-conflict                                                                 @controllers.LinkErrors.conflict()
#AGENT
#Dashboard
#TODO: Move to dashboard
GET         /manage-clients                                                                   @controllers.agent.RepresentationController.viewClientProperties()

GET         /add-user-to-gg                                                                   @controllers.Application.addUserToGG

#Address lookup
GET         /lookup                                                                           @controllers.AddressLookup.findByPostcode(postcode)

#Downtime page
GET         /planned-improvements                                                             @controllers.DowntimePage.plannedImprovements

#Enrolment page
GET         /complete-contact-details                                                         @controllers.registration.RegistrationController.show()
POST        /complete-business-contact-details                                                @controllers.registration.RegistrationController.submitOrganisation()
POST        /complete-existing-business-contact-details                                       @controllers.registration.RegistrationController.submitAdminToExistingOrganisation()
POST        /complete-your-contact-details                                                    @controllers.registration.RegistrationController.submitIndividual()
POST        /complete-business-contact-details-assistant                                      @controllers.registration.RegistrationController.submitAssistant()
GET         /create-success                                                                   @controllers.registration.RegistrationController.success(personId: Long)

#Draft Checks
GET         /draft-cases                                                                      @controllers.ManageDrafts.viewDraftCases()
POST        /delete-draft                                                                     @controllers.ManageDrafts.deleteDraftCase()
POST        /confirm-delete-draft                                                             @controllers.ManageDrafts.confirmDelete(draftId: String)
POST        /continue-draft-check                                                             @controllers.ManageDrafts.continueCheck()

#Business tax account
GET         /manage-business-tax-account                                                      @controllers.Application.manageBusinessTaxAccount()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                                     @controllers.Assets.at(path="/public", file)

GET         /keep-alive                                                                       @controllers.KeepAliveController.keepAlive()

#AGENT REPRESENTATION
#OWNER ONLY
#APPOINT
GET         /my-organisation/appoint                                                                                      @controllers.agentAppointment.AppointAgentController.appointMultipleProperties()
POST        /my-organisation/appoint                                                                                      @controllers.agentAppointment.AppointAgentController.submitAppointMultipleProperties()
GET         /my-organisation/appoint/properties                                                                           @controllers.agentAppointment.AppointAgentController.getMyOrganisationPropertyLinksWithAgentFiltering(pagination: PaginationParameters, params: GetPropertyLinksParameters, agentCode: Long, checkPermission: String, challengePermission: String, agentAppointed: Option[String])
POST        /my-organisation/appoint/properties/create                                                                    @controllers.agentAppointment.AppointAgentController.appointAgentSummary()

#GET         /revoke-agent/multiple-properties                                                 @controllers.agentAppointment.AppointAgentController.getAgentsForRemove()
#POST        /revoke-agent/select-properties                                                   @controllers.agentAppointment.AppointAgentController.selectAgentProperties()
#GET         /revoke-agent/select-properties-search                                            @controllers.agentAppointment.AppointAgentController.selectAgentPropertiesSearchSort(pagination: AgentPropertiesParameters)
#POST        /revoke-agent/agent-summary                                                       @controllers.agentAppointment.AppointAgentController.revokeAgentSummary()

GET         /my-organisation/revoke                                                                                       @controllers.agentAppointment.AppointAgentController.revokeMultipleProperties()
POST        /my-organisation/revoke                                                                                       @controllers.agentAppointment.AppointAgentController.submitRevokeMultipleProperties()
GET         /my-organisation/revoke/properties                                                                            @controllers.agentAppointment.AppointAgentController.selectAgentPropertiesSearchSort(pagination: PaginationParameters, params: GetPropertyLinksParameters, agentCode: Long)
POST        /my-organisation/revoke/properties/create                                                                     @controllers.agentAppointment.AppointAgentController.revokeAgentSummary()

#REVOKE
GET         /my-organisation/property-links/:submissionId/revoke/:agentCode                                               @controllers.agentAppointment.RevokeAgentController.revokeAgent(submissionId: String, authorisedPartyId: Long, agentCode: Long)
POST        /my-organisation/property-links/:submissionId/revoke/:agentCode                                               @controllers.agentAppointment.RevokeAgentController.revokeAgentSubmit(submissionId: String, agentCode: Long)

GET         /my-organisation/property-links/:submissionId/revoke/:agentCode/confirmed                                     @controllers.agentAppointment.RevokeAgentController.revokeAgentConfirmed(submissionId: String, authorisedPartyId: Long, agentCode: Long)

#AGENT ONLY
GET         /my-organisation/clients/requests                                                 @controllers.agent.RepresentationController.getMyClientsPropertyLinkRequests(page: Int ?= 1, pageSize: Int ?= 15)
#POST        /my-organisation/clients/requests                                                @controllers.agent.RepresentationController.pendingRepresentationRequest(page: Int ?= 1, pageSize: Int ?= 15)
POST         /my-organisation/clients/requests                                                @controllers.agent.RepresentationController.submitMyClientsPropertyLinkRequestResponse(page: Int, pageSize: Int)
GET        /my-organisation/clients/requests/continue                                         @controllers.agent.RepresentationController.continue(page: Int, pageSize: Int)
POST        /representation-request/bulkActions                                               @controllers.agent.RepresentationController.bulkActions


#DVR
#Owner Routes
GET         /my-organisation/property-link/:submissionId/valuations/:valuationId                                          @controllers.detailedvaluationrequest.DvrController.myOrganisationRequestDetailValuationCheck(submissionId: String, valuationId: Long)
POST        /my-organisation/property-link/:submissionId/valuations/:valuationId                                          @controllers.detailedvaluationrequest.DvrController.myOrganisationRequestDetailValuation(submissionId: String, valuationId: Long)
GET         /my-organisation/property-link/:submissionId/valuations/:valuationId/exists                                   @controllers.detailedvaluationrequest.DvrController.myOrganisationAlreadyRequestedDetailValuation(submissionId: String, valuationId: Long)
GET         /my-organisation/property-link/:submissionId/valuations/:valuationId/file/:ref                                @controllers.detailedvaluationrequest.DvrController.myOrganisationRequestDetailedValuationRequestFile(submissionId: String, valuationId: Long, ref: String)
GET         /my-organisation/property-link/:propertyLinkSubmissionId/valuations/confirmation                              @controllers.detailedvaluationrequest.DvrController.myOrganisationRequestDetailValuationConfirmation(propertyLinkSubmissionId: String, submissionId: String)

#Agent Routes
GET         /my-organisation/property-link/clients/all/:submissionId/valuations/:valuationId                              @controllers.detailedvaluationrequest.DvrController.myClientsRequestDetailValuationCheck(submissionId: String, valuationId: Long)
POST        /my-organisation/property-link/clients/all/:submissionId/valuations/:valuationId                              @controllers.detailedvaluationrequest.DvrController.myClientsRequestDetailValuation(submissionId: String, valuationId: Long)
GET         /my-organisation/property-link/clients/all/:submissionId/valuations/:valuationId/exists                       @controllers.detailedvaluationrequest.DvrController.myClientsAlreadyRequestedDetailValuation(submissionId: String, valuationId: Long)
GET         /my-organisation/property-link/clients/all/:submissionId/valuations/:valuationId/file/:ref                    @controllers.detailedvaluationrequest.DvrController.myClientsRequestDetailedValuationRequestFile(submissionId: String, valuationId: Long, ref: String)
GET         /my-organisation/property-link/clients/all/:propertyLinkSubmissionId/valuations/confirmation                  @controllers.detailedvaluationrequest.DvrController.myClientsRequestDetailValuationConfirmation(propertyLinkSubmissionId: String, submissionId: String)


